# Use the official Rust image as the build environment
FROM rust:1.72 AS builder

# Set the working directory inside the container
WORKDIR /src

# Copy the Cargo manifest files first to leverage Docker's caching
COPY Cargo.toml Cargo.lock ./

# Create a blank binary to cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs && cargo build --release && rm -rf src

# Copy the actual source code and build
COPY . .
RUN cargo build --release

# Create a minimal runtime image
FROM debian:buster-slim AS runtime

# Install required dependencies
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

# Set the working directory inside the runtime container
WORKDIR /app

# Copy the compiled binary from the builder stage
COPY --from=builder /app/target/release/solana-web-api .

# Expose the application port
EXPOSE 8080

# Set the command to run the application
CMD ["./solana-web-api"]
